name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Set release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Show environment
        run: |
          echo "Release version: $RELEASE_VERSION"
          echo "Go version: $(go version)"
          echo "Directory structure:"
          ls -la

      - name: Build Linux binary
        run: |
          echo "Building Linux binary..."
          GOOS=linux GOARCH=amd64 go build -v -ldflags "-X main.version=$RELEASE_VERSION" -o clustereye-api-linux-amd64 ./cmd/api
          chmod +x clustereye-api-linux-amd64
          echo "Linux binary built successfully:"
          ls -la clustereye-api-linux-amd64

      - name: Build Darwin binary
        run: |
          echo "Building Darwin binary..."
          GOOS=darwin GOARCH=amd64 go build -v -ldflags "-X main.version=$RELEASE_VERSION" -o clustereye-api-darwin-amd64 ./cmd/api
          chmod +x clustereye-api-darwin-amd64
          echo "Darwin binary built successfully:"
          ls -la clustereye-api-darwin-amd64

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            clustereye-api-linux-amd64
            clustereye-api-darwin-amd64
          name: Release ${{ env.RELEASE_VERSION }}
          tag_name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          generate_release_notes: true 